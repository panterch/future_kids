"use strict";

$(function () {
  register_datepickers();
  register_journal_controls();
  register_mentor_journal_date_selectors();
  register_schedule_checkboxes();
  register_todotogglers();
  register_kidsfilter();
  register_kidanchors();
  register_submit_action_in_sidebar();
  register_back_to_top_link();
  register_exit_at_toggler();
  register_freetext_toggler();
  register_treeview();
  register_document_search();
  setTimeout(remove_alerts, 3000);
});

// registers jquery ui datepickers on given fields when applicable
function register_datepickers() {

  var time_settings = {
    isoTime: true,
    separator: '.',
    minTime: {hour: <%= Schedule::MIN_HOUR %>, minute: 0},
    maxTime: {hour: <%= Schedule::LAST_MEETING_HOUR %>, minute: <%= Schedule::LAST_MEETING_MIN %>},
    timeInterval: 30
  };

  $('#kid_meeting_start_at').calendricalTime(time_settings);

  // journal entries may take longer than official meeting hours
  var start_settings = $.extend(true, {}, time_settings);
  var end_settings = $.extend(true, {}, time_settings);
  start_settings.maxTime.hour = 19;
  start_settings.timeInterval = 15;
  end_settings.maxTime.hour = 19;
  end_settings.timeInterval = 15;

  $(function(){
    $('#journal_start_at').on('blur', function() {
      var journal_start_at_time = document.getElementById('journal_start_at').value.split(':');
      var journal_start_at_hour = Number(journal_start_at_time[0]);
      var journal_start_at_min = Number(journal_start_at_time[1]);
      end_settings.maxTime.hour = Math.min(journal_start_at_hour + 2, 19);
      if (end_settings.maxTime.hour - journal_start_at_hour < 2) {
        end_settings.maxTime.minute = 45;
      } else {
        end_settings.maxTime.minute = journal_start_at_min;
      }
      if (end_settings.maxTime.hour == 19 && end_settings.maxTime.minute == 45) {
        end_settings.maxTime.minute = 30;
      }

    });
  });
  $('#journal_end_at').calendricalTime(end_settings);
  $('#journal_start_at').calendricalTime(start_settings);
}

// register active features on the journal entry form
function register_journal_controls() {
  $('#journal_cancelled').change(function() {
    var show_times = !($(this).is(':checked'));
    $('#journal_start_at_input, #journal_end_at_input').toggle(show_times);
  });
  $('#journal_cancelled').change();
}

// on the mentors page, two selectors allow choosing a filter data for journal
function register_mentor_journal_date_selectors() {
  $('select.select_mentor_journal_date').change(function() {
    var href =  window.location.pathname;
    href += '?month='+$('#date_month').val();
    href += '&year='+$('#date_year').val();
    href += '#mentor_journal_date';
    window.location = href;
  });
}

function register_schedule_checkboxes() {
  $('form.schedule table input[type=checkbox]').change(function(){
    $(this).siblings('input').toggleEnabled(this.checked); });
  $('form.schedule table input[type=checkbox]').each(function(){
    $(this).siblings('input').toggleEnabled(this.checked); });
}

function register_todotogglers() {
  $('a.todotoggle').popover({
    placement: 'left',
    trigger: 'hover',
    html: true
  });
}

function register_kidsfilter() {
  $('form.filter select, form.filter input').change(function() {
    $('form.filter').submit();
  });
}

function register_kidanchors() {
  $('#sidebar .kidanchors a').click(function(event) {
    event.preventDefault();

    var target = this.hash,
    $target = $(target);

    $('html, body').stop().animate({
      'scrollTop': $target.offset().top - $('#header').height() - 3
    }, 500, 'swing');
  });
}

function register_submit_action_in_sidebar() {
  $('#main form input[type=submit]').each(function() {
    var $original = $(this);
    if ($original.parents('.no-sidebar-actions').length) { return; }
    var $clone = $('<a href="#" class="list-group-item list-group-item-success">');
    $clone.text($original.val());
    $clone.click(function(event) {
      event.preventDefault();
      $original.click();
    });
    $clone.prependTo($('.contextual_links_panel .list-group'));
  });
}

function register_back_to_top_link() {
  if ($("body").height() < $(window).height()) { return; }
  var $toTop = $('<a href="#" class="list-group-item">');
  $toTop.text('Seitenanfang');
  $toTop.click(function(event) {
    event.preventDefault();
    $('html, body').stop().animate({ 'scrollTop': 0 }, 500, 'swing');
  });
  $toTop.appendTo($('.contextual_links_panel .list-group'));
}

function register_exit_at_toggler() {
  $('#kid_exit_kind, #mentor_exit_kind').change(function() {
    $('.form-group.kid_exit_at, .form-group.mentor_exit_at').toggle('later' == $(this).val());
  });
  $('#kid_exit_kind, #mentor_exit_kind').change();
}

function remove_alerts() {
  $('.alert').fadeOut();
}

// document view allows users to change input from select field to freetext input
// markup is prepared by rendering both field types, this listener toggles between
// both
function register_freetext_toggler() {
  $('a.freetext').click(function() {
    $(this).parents('.form-group').find(':input').each(function() {
      var $input = $(this);
      $input.toggle();
      // assure that only the visible field has the name attribute
      // set to avoid double submits
      if ($input.is(':visible')) {
        $input.attr('name', $input.data('name'));
      } else {
        $input.data('name', $input.attr('name'));
        $input.removeAttr('name');
      };
    });
  });
  $('a.freetext').click();
}

/* controls the treeview plugin to display the documents tree */
function register_treeview() {
    $('#tree').treeview({
        data: $('#tree').data('tree'),
        enableLinks: true,
        levels: 1
    });
    $('#tree_expand_all').click(function() {
        $('#tree').treeview('expandAll');
    });
    $('#tree_collapse_all').click(function() {
        $('#tree').treeview('collapseAll');
    });
    $('#tree_delete_node').click(function(event) {
        event.preventDefault();
        event.stopPropagation();
        var nodes = $('#tree').treeview('getSelected');
        if (1 > nodes.length) {
            alert('Bitte wählen Sie ein Dokument zum löschen.')
            return;
        }
        if (!window.confirm("Wirklich löschen?")) {
            return;
        }
        var href = $(this).attr("href") + '/' + nodes[0].documentId;
        $.ajax(href, {method: "DELETE", async: false})
        location.reload();
    });
    $('#tree_edit_node').click(function(event) {
        event.preventDefault();
        event.stopPropagation();
        var nodes = $('#tree').treeview('getSelected');
        if (1 > nodes.length) {
            alert('Bitte wählen Sie ein Dokument zum bearbeiten.')
            return;
        }
        var href = $(this).attr("href") + '/' + nodes[0].documentId+ '/edit';
        window.location = href;
    });
    $( "#tree" ).on( "click", "a", function(event) {
        event.preventDefault();
        var href = $(this).attr("href");
        if ('#' != href) { window.open(href); }
    });
}

/* controls the document search functionality */
function register_document_search() {
    var originalTreeData = $('#tree').data('tree');
    var $searchInput = $('#document_search');
    var $clearButton = $('#document_search_clear');

    if (!$searchInput.length || !originalTreeData) return;

    // Clear button functionality
    $clearButton.on('click', function() {
        $searchInput.val('').trigger('input');
    });

    $searchInput.on('input', function() {
      var searchTerm = $(this).val().toLowerCase().trim();

        // Show/hide clear button based on whether there's a search term
        if (searchTerm === '') {
            $clearButton.hide();
        } else {
            $clearButton.show();
        }

        if (searchTerm === '') {
            // Reset to original tree
            $('#search_no_results').hide();
            $('#tree').show().treeview('remove');
            $('#tree').treeview({
                data: originalTreeData,
                enableLinks: true,
                levels: 1
            });
        } else {
            // Filter tree data
            var filteredData = filterTreeData(originalTreeData, searchTerm);
            $('#tree').treeview('remove');

            if (filteredData.length === 0) {
                // Show no results message
                $('#tree').hide();
                $('#search_no_results').show();
            } else {
                // Show filtered results
                $('#search_no_results').hide();
                $('#tree').show().treeview({
                    data: filteredData,
                    enableLinks: true,
                    levels: 10 // Expand all levels for search results
                });
            }
        }
    });
}

function filterTreeData(nodes, searchTerm) {
    var filtered = [];

    nodes.forEach(function(node) {
        var hasMatchingChildren = false;
        var filteredChildren = [];

        // Check if this is a document (has documentId) or a category folder
        var isDocument = node.documentId !== undefined;

        // Only match document titles, not folder names
        var matchesTitle = isDocument && node.text && node.text.toLowerCase().includes(searchTerm);

        // If node has children, filter them recursively
        if (node.nodes && node.nodes.length > 0) {
            filteredChildren = filterTreeData(node.nodes, searchTerm);
            hasMatchingChildren = filteredChildren.length > 0;
        }

        // Include node if it's a matching document OR if it has matching children (for folders)
        if (matchesTitle || hasMatchingChildren) {
            var newNode = {
                text: node.text,
                selectable: node.selectable,
                icon: node.icon
            };

            // Copy document properties if it's a document
            if (isDocument) {
                newNode.href = node.href;
                newNode.documentId = node.documentId;
            }

            // Add filtered children if any
            if (filteredChildren.length > 0) {
                newNode.nodes = filteredChildren;
            }

            filtered.push(newNode);
        }
    });

    return filtered;
}
